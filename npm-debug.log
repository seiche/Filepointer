0 info it worked if it ends with ok
1 verbose cli [ 'C:\\Program Files\\nodejs\\node.exe',
1 verbose cli   'C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js',
1 verbose cli   'publish',
1 verbose cli   '.' ]
2 info using npm@2.14.4
3 info using node@v4.1.1
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: 'C:\\Users\\Benjamin\\Documents\\GitHub\\Filepointer\\Filepointer',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory C:\Users\Benjamin\AppData\Roaming\npm-cache\filepointer\0.0.4\package.tgz not in flight; packing
9 verbose tar pack [ 'C:\\Users\\Benjamin\\AppData\\Roaming\\npm-cache\\filepointer\\0.0.4\\package.tgz',
9 verbose tar pack   'C:\\Users\\Benjamin\\Documents\\GitHub\\Filepointer\\Filepointer' ]
10 verbose tarball C:\Users\Benjamin\AppData\Roaming\npm-cache\filepointer\0.0.4\package.tgz
11 verbose folder C:\Users\Benjamin\Documents\GitHub\Filepointer\Filepointer
12 info prepublish filepointer@0.0.4
13 verbose addLocalTarball adding from inside cache C:\Users\Benjamin\AppData\Roaming\npm-cache\filepointer\0.0.4\package.tgz
14 silly cache afterAdd filepointer@0.0.4
15 verbose afterAdd C:\Users\Benjamin\AppData\Roaming\npm-cache\filepointer\0.0.4\package\package.json not in flight; writing
16 verbose afterAdd C:\Users\Benjamin\AppData\Roaming\npm-cache\filepointer\0.0.4\package\package.json written
17 silly publish { name: 'filepointer',
17 silly publish   version: '0.0.4',
17 silly publish   description: 'Small wrapper library for reading binary files with nodejs',
17 silly publish   main: 'filepointer.js',
17 silly publish   scripts: { test: 'echo "Error: no test specified" && exit 1' },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/seiche/Filepointer.git' },
17 silly publish   keywords: [ 'filepointer' ],
17 silly publish   author: { name: 'Benjamin Collins', email: 'seichestream@gmail.com' },
17 silly publish   license: 'GPLv2',
17 silly publish   bugs: { url: 'https://github.com/seiche/Filepointer/issues' },
17 silly publish   homepage: 'https://github.com/seiche/Filepointer#readme',
17 silly publish   readme: '###FilePointer\r\n\r\nFilePointer uses an internal pointer and some helper methods to simplify the process of reading binary files as opposed to using Nodejs\' buffer class directly.\r\n\r\n**Install**  \r\n```\r\n$ npm install filepointer\r\n```  \r\n\r\nVersion 0.0.1 File pointer is a small wrapper class for reading binary data from files. It\'s a small side library I\'ve been writing when working with converting binary files to ascii and json formats. It\'s still in its infancy and subject to changes, so I don\'t recomend using it for anything too important. But if you want to try it out, feel free to.  \r\n\r\nAlso the version number on npm will probably change since I need to update the version to publish changes, so please reverence the version number in this readme as a better reference.\r\n\r\n**Import**  \r\n```\r\nvar fs = require("fs");\r\nvar FilePointer = require("filepointer");\r\n\r\nvar fp = new FilePointer("some_file.bin");\r\n//alternatively\r\nvar buffer = fs.readFileSync("some_file.bin")\r\nvar fp = new FilePointer(buffer);\r\n```\r\n\r\nThe FilePointer function can be imported by requiring it. Instances of FilePointer can be initiated by calling the new keyword and passing a filename as an argument. FilePointer simply calls fs.readFileSync internally, so an error will be thrown if the file doesn\'t exist.\r\n\r\nAlternatively a new FilePointer instance can be created directly with a buffer object, as there may be instances where you want to read data from an internally created buffer. The functionality\r\nworks exactly the same as passing in a filename. The pointer object holds the buffer internally and starts the filepointer at zero.\r\n\r\n**fp.seek_set**\r\n```\r\nfp.is_zero()\r\n```\r\n\r\nReads a dword to see if it is zero. Returns true if it is zero and false otherwise.\r\nAs this function is for testing the value of a group of bytes, it does not advance\r\nthe inner file pointer.\r\n\r\n**fp.seek_set**\r\n```\r\nfp.seek_set(offset)\r\n```\r\n\r\nSeeks to an offset from the start of the file.\r\n\r\n**fp.seek_cur**\r\n```\r\nfp.seek_cur(offset)\r\n```\r\n\r\nSeeks to an offset from the current file pointer position.\r\n\r\n**fp.seek_end**\r\n```\r\nfp.seek_end(offset)\r\n```\r\n\r\nSeeks to an offset from the end of end of the file.\r\n\r\n**fp.trim**\r\n```\r\nfp.trim()\r\n```\r\n\r\nTrims the internal buffer to the location of the current file pointer, and sets the value of the current pointer to zero. Useful when offsets inside a file do not account for the position in which the offset is declared.\r\n\r\n**fp.slice**\r\n```\r\nfp.slice(start, end)\r\n```\r\n\r\nCopies and returns a raw buffer object from the provided start and end values in the argument. Does not advance the internal file pointer, and does not change the internal buffer.\r\n\r\n**fp.read_word**\r\n```\r\nfp.read_word(offset)\r\n```\r\n\r\nThis function reads the next four bytes in the file as an unsigned short. The internal file pointer advances by two bytes.\r\n\r\n**fp.read_dword**\r\n```\r\nfp.read_dword(offset)\r\n```\r\n\r\nThis function reads the next four bytes in the file as an unsigned integer. The internal file pointer advances by four bytes.\r\n\r\n**fp.read_single**\r\n```\r\nfp.read_single()\r\n```\r\n\r\nThis function reads the next four bytes in the file as a float. In order to read the file as a decimal in the command line, the value is truncated to six decimal places. The internal file pointer advances by four bytes.\r\n\r\n**fp.read_hex**\r\n```\r\nfp.read_hex(len)\r\n```\r\n\r\nMostly used for debuging. This function performs the same function as fp.read_str, except as hex characters instead of ascii. The internal pointer advances by the value of the argument provided. Not very useful in production, but when debuging it\'s helpful for reading what the current data at the current pointer is.\r\n\r\n**fp.read_str**\r\n```\r\nfp.read_str(len)\r\n```\r\n\r\nThis function reads a string as ascii characters form the current file location for the length of the value provided. The function truncates null characters from the string. The internal pointer advances by the value of the argument provided.\r\n\r\n**fp.read_iff**\r\n```\r\nfp.read_iff()\r\n```\r\n\r\nThis function is the same thing as fp.read_str(4). It reads four bytes as a string and returns them. In order to make my code descriptive in terms of functionality, I made this a dedicated function. This function advances the internal file pointer by four bytes.\r\n\r\n**fp.get_pos**\r\n```\r\nfp.get_pos()\r\n```\r\n\r\nReturns the current location of the inner file pointer. Similar to the functionality of ftell in C.\r\n\r\n**fp.find_iff**\r\n```\r\nfp.find(str, [seek_cur])\r\n```\r\nSearching for an [Interchange File Format](https://en.wikipedia.org/wiki/Interchange_File_Format) inside a file is a pretty common function I found myself using. This function takes a string of length four or less, and a boolean to search from the current position or not. By default it will search from the beginning of the file. If the IFF string is found inside the file, the inner file pointer is updated to the position of the start of the string. If the string is not found, the function returns false and the pointer remains where it was.\r\n\r\n**fp.read_angle**\r\n```\r\nfp.read_angle()\r\n```\r\n\r\nThis function reads four bytes as a signed integer and converts it to degrees where 0x0000 corresponds to zero and 0xFFFF corresponds to 360 degrees. This function advances the internal file pointer by four bytes.\r\n\r\n**fp.lz77_decomp**\r\n```\r\nfp.lz77_decomp(buffer)\r\n```\r\n\r\nThis function takes a file buffer as an argument, decompresses it and returns a buffer decompressed with the lz77 decompression format. Doesn\'t have anything to do with the internal file pointer, but it\'s a function that\'s important enough to be included.\r\n',
17 silly publish   readmeFilename: 'readme.md',
17 silly publish   gitHead: '869b4d3b3fe0303f63da3cf069e86618fe2b272d',
17 silly publish   _id: 'filepointer@0.0.4',
17 silly publish   _shasum: '88d2b2b3eaf72b0595b729ee48b490a834df50d7',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name filepointer
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/filepointer
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading C:\Users\Benjamin\AppData\Roaming\npm-cache\filepointer\0.0.4\package.tgz
25 verbose request uri https://registry.npmjs.org/filepointer
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 22:41:32
28 verbose request using bearer token for auth
29 verbose request id 1c5bf2d6a9ac4a58
30 http request PUT https://registry.npmjs.org/filepointer
31 http 403 https://registry.npmjs.org/filepointer
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=60',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Fri, 04 Dec 2015 13:41:32 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-nrt6131-NRT',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1449236491.574456,VS0,VE664' }
33 verbose request invalidating C:\Users\Benjamin\AppData\Roaming\npm-cache\registry.npmjs.org\filepointer on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 0.0.4." : filepointer
35 verbose stack     at makeError (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:263:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:251:14)
35 verbose stack     at Request._callback (C:\Program Files\nodejs\node_modules\npm\node_modules\npm-registry-client\lib\request.js:171:14)
35 verbose stack     at Request.self.callback (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:1073:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (C:\Program Files\nodejs\node_modules\npm\node_modules\request\request.js:1019:12)
36 verbose statusCode 403
37 verbose pkgid filepointer
38 verbose cwd C:\Users\Benjamin\Documents\GitHub\Filepointer\Filepointer
39 error Windows_NT 10.0.10240
40 error argv "C:\\Program Files\\nodejs\\node.exe" "C:\\Program Files\\nodejs\\node_modules\\npm\\bin\\npm-cli.js" "publish" "."
41 error node v4.1.1
42 error npm  v2.14.4
43 error code E403
44 error "You cannot publish over the previously published version 0.0.4." : filepointer
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
